{"version":3,"sources":["components/Jumbotron/index.js","components/Card/index.js","components/Form/index.js","components/List/index.js","components/Grid/index.js","components/Book/index.js","components/Footer/index.js","utils/API.js","pages/Home.js","pages/Search.js","components/Tibit/index.js","pages/Add.js","pages/NoMatch.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","className","Card","icon","title","concat","aria-hidden","Form","q","handleInputChange","handleFormSubmit","htmlFor","id","type","value","placeholder","name","onChange","required","onClick","List","ListItem","_ref2","Container","fluid","Row","Col","_ref3","size","split","map","join","Book","action","goal","date","location","CreateButton","DeleteButton","UpdateButton","Footer","API","findTibits","phrase","console","log","axios","get","getAllTibits","deleteTibit","delete","createTibit","tibitData","post","updateTibit","put","Home","state","tibits","message","event","_event$target","target","_this","setState","Object","defineProperty","trim","then","res","data","length","catch","err","preventDefault","handleTibitDelete","tibit","find","_id","handleTibitUpdate","Date","handleTibitCreate","now","note","components_Jumbotron","Alert_default","variant","Heading","components_Footer","Component","this","_this2","List_List","components_Card","components_Form","components_Book","key","Tibit","Add","Form_default","Group","controlId","Label","Control","Text","as","rows","Button_default","components_Tibit","NoMatch","role","aria-label","Nav","open","width","window","innerWidth","updateWidth","newState","toggleNav","addEventListener","removeEventListener","Link","to","data-toggle","data-target","aria-controls","aria-expanded","pathname","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","Search","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.15860c9d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return <div className=\"jumbotron mt-4\">{children}</div>;\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\nfunction Card({ icon, title, children }) {\n  return (\n    <div className=\"card mt-4\">\n      <div className=\"card-header\">\n        <h3>\n          <strong>\n            <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\n          </strong>\n        </h3>\n      </div>\n      <div className=\"card-body\">{children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction Form({ q, handleInputChange, handleFormSubmit }) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"Query\">\n          <strong>search word</strong>\n        </label>\n        <input\n          className=\"form-control\"\n          id=\"Title\"\n          type=\"text\"\n          value={q}\n          placeholder=\"Type word to search for in Tibits\"\n          name=\"q\"\n          onChange={handleInputChange}\n          required\n        />\n      </div>\n      <div className=\"pull-right\">\n        <button\n          onClick={handleFormSubmit}\n          type=\"submit\"\n          className=\"btn btn-lg btn-danger float-right\"\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./style.css\";\n\n// This component exports both the List and ListItem components\n\nexport const List = ({ children }) => (\n  <ul className=\"list-group\">\n    {children}\n  </ul>\n);\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ListItem } from \"../List\";\nimport { Row, Col } from \"../Grid\";\nimport \"./style.css\";\n\nfunction Book({ action, goal, date, location, CreateButton, DeleteButton, UpdateButton }) {\n  return (\n    <ListItem>\n      <Row className=\"flex-wrap-reverse\">\n        {/* <Col size=\"md-6\">\n          <h3 className=\"font-italic\">{goal}</h3>\n          {goal && <h5 className=\"font-italic\">{goal}</h5>}\n        </Col> */}\n        <Col size=\"md-12\">\n          <div className=\"btn-container\">\n            <CreateButton />\n            <UpdateButton />\n            <DeleteButton />\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-12\">\n          <p className=\"font-italic small\">{action}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-4\">\n          <p>{goal}</p>\n        </Col>\n        <Col size=\"md-4\">\n          {location && <p>({location})</p>}\n        </Col>\n        <Col size=\"md-4\">\n          {date && <p>({date})</p>}\n        </Col>\n      </Row>\n    </ListItem>\n  );\n}\n\nexport default Book;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <hr />\n      <p className=\"pull-right\">\n        <i className=\"fab fa-github\" /> Proudly built using React.js\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import axios from \"axios\";\n\nexport default {\n  // search for Tibits\n  findTibits: function(phrase) {\n    console.log(\"here is phrase \" + phrase);\n     return axios.get(\"/api/tibits/find/\" + phrase );\n   },\n  // Gets all tibits\n  getAllTibits: function() {\n    return axios.get(\"/api/tibits\");\n  },\n  // Deletes the saved book with the given id\n  deleteTibit: function(id) {\n    return axios.delete(\"/api/tibits/\" + id);\n  },\n  // Create tibit\n  createTibit: function(tibitData) {\n    return axios.post(\"/api/tibits\", tibitData);\n  },\n  // Update a given tibit\n  updateTibit: function(id, tibitData) {\n    return axios.put(\"/api/tibits/\" + id, tibitData);\n  },\n};\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\nimport Alert from 'react-bootstrap/Alert'\n\nclass Home extends Component {\n  state = {\n    tibits: [],\n    q: \"\",\n    message: \"Search For A Tibit To Begin!\"\n  };\n\n  componentDidMount() {\n    //this.findTibits();\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state.q);\n  };\n\n  findTibits = () => {\n    console.log(this.state.q)\n    if (this.state.q.trim()){\n      API.findTibits(this.state.q)\n        .then(res =>{\n          console.log(\"fiinding tibits\")\n          console.log(res.data)\n          if (!(res.data.length === 0)){\n            this.setState({\n              tibits: res.data\n            })\n          }else {\n            this.setState({\n              tibits: [],\n              message: \"No Tibits Found Matching your Query, Try a Different phrase\"\n            })\n          }\n        })\n\n        .catch((err) =>{\n          this.setState({\n            tibits: [],\n            message: err.message\n          })\n          console.log(\"fiinding tibits catch\")}\n        )\n\n    } else {\n      API.getAllTibits()\n        .then(res =>{\n          console.log(\"getting all tibits\")\n          if (!(res.data.length === 0)){\n            this.setState({\n              tibits: res.data\n            })\n          }else {\n            this.setState({\n              tibits: [],\n              message: \"Database is empty\"\n            })\n          }\n        })\n\n        .catch((err) =>\n          this.setState({\n            tibits: [],\n            message: err.message\n          })\n        );\n    }\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"ouch!\")\n    this.findTibits();\n  };\n\n  handleTibitDelete = id => {\n    const tibit = this.state.tibits.find(tibit => tibit._id === id);\n    API.deleteTibit(tibit._id)\n    .then(() => this.findTibits());\n  };\n\n  handleTibitUpdate = id => {\n    const tibit = this.state.tibits.find(tibit => tibit._id === id);\n\n    API.updateTibit(tibit._id, {\n      action: \"Read the best book ever! \" + Date()\n    }).then(() => this.findTibits());\n  };\n\n  handleTibitCreate = () => {\n    API.createTibit({\n      action: \"Great Action\" + Date(),\n      goal: \"Some Awesome Goal\",\n      location: \"Someplace in Tucson\",\n      date: Date.now(),\n      note: \"This is a longer string\"\n    }).then(() => this.findTibits());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1 className=\"text-center\">\n                <strong>Tibit - Collect your action in one place!</strong>\n              </h1>\n              <h2 className=\"text-center\">Never forget any action.</h2>\n            </Jumbotron>\n          </Col> \n          {/*   \n          <Col size=\"md-12\">\n            <Card title=\"Tibit Search\" icon=\"far fa-search\">\n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                q={this.state.q}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Search Results\" icon=\"camera\">\n              {this.state.tibits.length ? (\n                <List>\n                  {this.state.tibits.map(tibit => (\n                    <Book\n                      key={tibit._id}\n                      action={tibit.action}\n                      goal={tibit.goal}\n                      location={tibit.location}\n                      date={tibit.date}\n                      CreateButton={() => (\n                        <button\n                          onClick={() => this.handleTibitCreate()}\n                          className=\"btn btn-primary btn-sm ml-2\"\n                        >\n                          Create\n                        </button>\n                      )}\n                      UpdateButton={() => (\n                        <button\n                          onClick={() => this.handleTibitUpdate(tibit._id)}\n                          className=\"btn btn-success btn-sm ml-2\"\n                        >\n                          Update\n                        </button>\n                      )}\n                      DeleteButton={() => (\n                        <button\n                          onClick={() => this.handleTibitDelete(tibit._id)}\n                          className=\"btn btn-primary btn-sm ml-2\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n                ) : (\n                <h2 className=\"text-center\">{this.state.message}</h2>\n              )}\n            </Card>\n          </Col> */}\n        </Row> \n        <Row>\n            <Alert variant=\"primary\">\n              <Alert.Heading>We need a landing page</Alert.Heading>\n              <p>The landing page will be the first page one will see when they get to our site.\n                It should be beautiful and usable. On this page we shoudl have some info that will keep the user informed.\n              </p>\n              <hr />\n              <p className=\"mb-0\">Who wants to be hero and take this on?</p>\n            </Alert>  \n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n//import Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\nimport Alert from 'react-bootstrap/Alert'\n\nclass Home extends Component {\n  state = {\n    tibits: [],\n    q: \"\",\n    message: \"Search For A Tibit To Begin!\"\n  };\n\n  componentDidMount() {\n    this.findTibits();\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state.q);\n  };\n\n  findTibits = () => {\n    console.log(this.state.q)\n    if (this.state.q.trim()){\n      API.findTibits(this.state.q)\n        .then(res =>{\n          console.log(\"fiinding tibits\")\n          console.log(res.data)\n          if (!(res.data.length === 0)){\n            this.setState({\n              tibits: res.data\n            })\n          }else {\n            this.setState({\n              tibits: [],\n              message: \"No Tibits Found Matching your Query, Try a Different phrase\"\n            })\n          }\n        })\n\n        .catch((err) =>{\n          this.setState({\n            tibits: [],\n            message: err.message\n          })\n          console.log(\"fiinding tibits catch\")}\n        )\n\n    } else {\n      API.getAllTibits()\n        .then(res =>{\n          console.log(\"getting all tibits\")\n          if (!(res.data.length === 0)){\n            this.setState({\n              tibits: res.data\n            })\n          }else {\n            this.setState({\n              tibits: [],\n              message: \"Database is empty\"\n            })\n          }\n        })\n\n        .catch((err) =>\n          this.setState({\n            tibits: [],\n            message: err.message\n          })\n        );\n    }\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"ouch!\")\n    this.findTibits();\n  };\n\n  handleTibitDelete = id => {\n    const tibit = this.state.tibits.find(tibit => tibit._id === id);\n    API.deleteTibit(tibit._id)\n    .then(() => this.findTibits());\n  };\n\n  handleTibitUpdate = id => {\n    const tibit = this.state.tibits.find(tibit => tibit._id === id);\n\n    API.updateTibit(tibit._id, {\n      action: \"Read the best book ever! \" + Date()\n    }).then(() => this.findTibits());\n  };\n\n  handleTibitCreate = () => {\n    API.createTibit({\n      action: \"Great Action\" + Date(),\n      goal: \"Some Awesome Goal\",\n      location: \"Someplace in Tucson\",\n      date: Date.now(),\n      note: \"This is a longer string\"\n    }).then(() => this.findTibits());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          {/* <Col size=\"md-12\">\n            <Jumbotron>\n              <h1 className=\"text-center\">\n                <strong>Tibit - Collect your action in one place!</strong>\n              </h1>\n              <h2 className=\"text-center\">Never forget any action.</h2>\n            </Jumbotron>\n          </Col> */}\n          <List>\n              {this.state.tibits.map(tibit => (\n                <Alert variant=\"primary\">\n                  <Alert.Heading>{tibit.goal}</Alert.Heading>\n                  <p>{tibit.action}</p>\n                  <hr />\n                  <p className=\"mb-0\">{tibit.date}</p>\n                </Alert>\n                ))}\n          </List>     \n          <Col size=\"md-12\">\n            <Card title=\"Tibit Search\" icon=\"far fa-search\">\n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                q={this.state.q}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Search Results\" icon=\"camera\">\n              {this.state.tibits.length ? (\n                <List>\n                  {this.state.tibits.map(tibit => (\n                    <Book\n                      key={tibit._id}\n                      action={tibit.action}\n                      goal={tibit.goal}\n                      location={tibit.location}\n                      date={tibit.date}\n                      CreateButton={() => (\n                        <button\n                          onClick={() => this.handleTibitCreate()}\n                          className=\"btn btn-primary btn-sm ml-2\"\n                        >\n                          Create\n                        </button>\n                      )}\n                      UpdateButton={() => (\n                        <button\n                          onClick={() => this.handleTibitUpdate(tibit._id)}\n                          className=\"btn btn-success btn-sm ml-2\"\n                        >\n                          Update\n                        </button>\n                      )}\n                      DeleteButton={() => (\n                        <button\n                          onClick={() => this.handleTibitDelete(tibit._id)}\n                          className=\"btn btn-primary btn-sm ml-2\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n                ) : (\n                <h2 className=\"text-center\">{this.state.message}</h2>\n              )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { ListItem } from \"../List\";\nimport { Row, Col } from \"../Grid\";\nimport \"./style.css\";\n\nfunction Tibit({ action, goal, date, location, DeleteButton, UpdateButton }) {\n  return (\n    <ListItem>\n      <Row className=\"flex-wrap-reverse\">\n        {/* <Col size=\"md-6\">\n          <h3 className=\"font-italic\">{goal}</h3>\n          {goal && <h5 className=\"font-italic\">{goal}</h5>}\n        </Col> */}\n        <Col size=\"md-12\">\n          <div className=\"btn-container\">\n            <UpdateButton />\n            <DeleteButton />\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-12\">\n          <p className=\"font-italic small\">{action}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-4\">\n          <p>{goal}</p>\n        </Col>\n        <Col size=\"md-4\">\n          {location && <p>({location})</p>}\n        </Col>\n        <Col size=\"md-4\">\n          {date && <p>({date})</p>}\n        </Col>\n      </Row>\n    </ListItem>\n  );\n}\n\nexport default Tibit;\n","import React, { Component } from \"react\";\n//import Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\n//import Form from \"../components/Form\";\nimport Tibit from \"../components/Tibit\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n//import Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass Add extends Component {\n  state = {\n    tibits: [],\n    q: \"\",\n    message: \"Some message\"\n  };\n\n  componentDidMount() {\n    this.getAllTibits();\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state.q);\n  };\n\n  getAllTibits = () => {\n      API.getAllTibits()\n        .then(res =>{\n          console.log(\"getting all tibits\")\n          if (!(res.data.length === 0)){\n            this.setState({\n              tibits: res.data\n            })\n          }else {\n            this.setState({\n              tibits: [],\n              message: \"Database is empty\"\n            })\n          }\n        })\n        .catch((err) =>\n          this.setState({\n            tibits: [],\n            message: err.message\n          })\n        );\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.createTibit({\n        action: \"Great Action\" + Date(),\n        goal: \"Some Awesome Goal\",\n        location: \"Someplace in Tucson\",\n        date: Date.now(),\n        note: \"This is a longer string\"\n      }).then(() => this.getAllTibits());\n  };\n\n  handleTibitDelete = id => {\n    const tibit = this.state.tibits.find(tibit => tibit._id === id);\n    API.deleteTibit(tibit._id)\n    .then(() => this.getAllTibits());\n  };\n\n  handleTibitUpdate = id => {\n    const tibit = this.state.tibits.find(tibit => tibit._id === id);\n\n    API.updateTibit(tibit._id, {\n      action: \"Read the best book ever! \" + Date()\n    }).then(() => this.findTibits());\n  };\n\n  handleTibitCreate = () => {\n    API.createTibit({\n      action: \"Great Action\" + Date(),\n      goal: \"Some Awesome Goal\",\n      location: \"Someplace in Tucson\",\n      date: Date.now(),\n      note: \"This is a longer string\"\n    }).then(() => this.getAllTibits());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          {/* <List>\n              {this.state.tibits.map(tibit => (\n                <Alert variant=\"primary\">\n                  <Alert.Heading>{tibit.goal}</Alert.Heading>\n                  <p>{tibit.action}</p>\n                  <hr />\n                  <p className=\"mb-0\">{tibit.date}</p>\n                </Alert>\n                ))}\n          </List>      */}\n          <Col size=\"md-12\">\n            <Card title=\"Tibit Add\" icon=\"far fa-add\">\n              {/* <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleTibitCreate}\n                q={this.state.q}\n              /> */}\n\n            <Form>\n                <Row>\n                    <Col size=\"md-4\">\n                    <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Goal</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter target goal\" />\n                            <Form.Text className=\"text-muted\">\n                            What is the goal achieved by this action?\n                            </Form.Text>\n                        </Form.Group>\n                    </Col>\n                    <Col size=\"md-4\">\n                    <Form.Group controlId=\"formGridAddress1\">\n                        <Form.Label>Location</Form.Label>\n                        <Form.Control placeholder=\"1234 Main St\" />\n                        <Form.Text className=\"text-muted\">\n                            Where did the action took place?\n                        </Form.Text>                        \n                    </Form.Group>\n                    </Col>                    \n                    <Col size=\"md-4\">\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Date</Form.Label>\n                            <Form.Control type=\"date\" placeholder=\"action date\" />\n                            <Form.Text className=\"text-muted\">\n                            When did you perform the action?\n                            </Form.Text>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-12\">\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Action</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Capture your action here\" />\n                        <Form.Text className=\"text-muted\">\n                            What is the action?\n                        </Form.Text>                    \n                    </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-12\">\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Note</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"2\" />\n                        <Form.Text className=\"text-muted\">\n                            Any detail about action?\n                        </Form.Text>                        \n                    </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Button \n                            className=\"float-right\" \n                            variant=\"primary\" \n                            type=\"submit\"\n                            onClick={() => this.handleTibitCreate()}\n                            >\n                            Submit\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Added Tibits\" icon=\"camera\">\n              {this.state.tibits.length ? (\n                <List>\n                  {this.state.tibits.map(tibit => (\n                    <Tibit\n                      key={tibit._id}\n                      action={tibit.action}\n                      goal={tibit.goal}\n                      location={tibit.location}\n                      date={tibit.date}\n                      CreateButton={() => (\n                        <button\n                          onClick={() => this.handleTibitCreate()}\n                          className=\"btn btn-primary btn-sm ml-2\"\n                        >\n                          Create\n                        </button>\n                      )}\n                      UpdateButton={() => (\n                        <button\n                          onClick={() => this.handleTibitUpdate(tibit._id)}\n                          className=\"btn btn-success btn-sm ml-2\"\n                        >\n                          Update\n                        </button>\n                      )}\n                      DeleteButton={() => (\n                        <button\n                          onClick={() => this.handleTibitDelete(tibit._id)}\n                          className=\"btn btn-primary btn-sm ml-2\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n                ) : (\n                <h2 className=\"text-center\">{this.state.message}</h2>\n              )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Add;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1 className=\"text-center\">404 Page Not Found</h1>\n            <h1 className=\"text-center\">\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nclass Nav extends Component {\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  updateWidth = () => {\n    const newState = { width: window.innerWidth };\n\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    this.setState(newState);\n  };\n\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          TibiT\n        </Link>\n        <button\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n\n          <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Home\n              </Link>\n            </li>\n            \n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/add\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/add\"\n              >\n                Add\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/search\"\n              >\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/setting\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/setting\"\n              >\n                Setting\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/login\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/login\"\n              >\n                Login\n              </Link>\n            </li>            \n          </ul>   \n\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Search from \"./pages/Search\";\n// import Saved from \"./pages/Saved\";\nimport Add from \"./pages/Add\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/add\" component={Add} /> */}\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}